name: 'Lint Code'
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint_python:
    name: Lint Python Files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run Python Linter
        run: |
          find . -name "*.py" -exec flake8 --max-line-length=120 {} +
          echo "Linted all the Python files successfully"

  lint_js:
    name: Lint JavaScript/React Files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Check Node.js version
        run: node --version

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: Install Node.js dependencies
        run: |
          npm install --global eslint

      - name: Run JavaScript/React Linter
        run: |
          # Replace `.js` with appropriate file extensions
          find . -name "*.js" -exec eslint {} +
          echo "Linted all the JavaScript/React files successfully"

  check_versions:
    name: Check Node.js and Python Versions
    runs-on: ubuntu-latest
    steps:
      - name: Check Node.js version
        run: node --version

      - name: Check Python version
        run: python --version

      - name: Update setup-node action if outdated
        run: npm outdated @actions/setup-node --fetch-depth=0 || true

      - name: Update setup-python action if outdated
        run: pip install --upgrade pip setuptools || true

      - name: Update Python
        run: pip install --upgrade python || true
      - name: Fail job if linting errors
        if: ${{ failure() }}
        run: exit 1
